#!/bin/bash

. "$(dirname "$0")"/helpers/init.sh
helper mt_split2mono
helper mt_split2mono_translate_commit

usage() {
    printf "%s\n"                                                           \
        "usage: $(print_cmdname) <dir> <commit> [<parent> <pdirs>...]"      \
        "          <dir> <commit> [<parent> <pdirs>...]"                    \
        "  <dir>       the directory to move to; use '-' for root"          \
        "  <commit>    commit hash to translate"                            \
        "  <parent>    overrides first-parent"                              \
        "  <pdirs>     dirs to take from <parent> instead of \"newest\""
}

main() {
    [ "$#" -ge 1 ] || usage_error "missing <dir> <commit>"
    [ "$#" -ge 2 ] || usage_error "missing <commit>"

    mt_split2mono_init &&
        translate_commit "$@" &&
        mt_split2mono_save
}

translate_commit() {
    # usage: mt-split2mono-translate-commit
    #           <dir> <commit> [<parent> <pdirs>...]
    #   <dir>       the directory to move to; use "" for top-level
    #   <commit>    commit hash to translate
    #   <parent>    overrides first-parent
    #   <pdirs>     dirs to take from <parent> instead of "newest"

    local splitdir="$1" main_commit="$2" main_parent_override="$3"
    shift 3
    local main_parent_override_dirs=( "$@" )

    # FIXME: If there's a big history to map, using a stack like this will be
    # very slow.  It would be better to git rev-list --reverse --topo-order.
    # However, what --not arguments do you we use?  Should we do a bisect,
    # similar to mt_llvm_svn2git_map, to find out?  But given that this is not
    # expected to be a linear history, how easy is that?
    #
    # Maybe we can just collect radars in chunks, going back 100 or so at a
    # time.  Then rev-list all the found radars in topological order to do the
    # real work.  As a first cut this stack is fine though.
    mt_split2mono_translate_push "$main_commit" ||
        error "could not push '$main_commit' onto the stack"

    while ! mt_split2mono_translate_empty; do
        # Take a look at the top of the stack.
        commit="$(mt_split2mono_translate_top)" ||
            error "could not pull out the top of the stack, '$commit'"
        [ -n "$commit" ] ||
            error "the stack is not working"

        # Pop it off if it's already mapped.
        #
        # Note: Maybe we should move or copy the mt_llvm_svn logic from
        # mt_split2mono to just below this, and map those commits explicitly.
        # See the FIXME there for more discussion.
        if mt_split2mono $commit >/dev/null; then
            mt_split2mono_translate_pop ||
                error "could not pop already-translated commit"
            continue
        fi

        # Lookup the split commit's parents' monorepo commits.  This will
        # return non-zero if one of the parents is not mapped (and was pushed
        # on the stack).
        mt_split2mono_translate_map_parents $main_commit \
            "$main_parent_override" $commit $(git rev-parse $commit^@) ||
            continue

        local override= tree
        if [ -n "$main_parent_override" -a "$commit" = "$main_commit" ]; then
            override="--override-parent $main_parent_override"
        fi
        tree=$(git rev-parse $commit:)


        # Extract committer and author information.
        # TODO: add a test for committer and author information.
        local ad an ae cd cn ce
        ad="$(git log -1 --date=raw --format="%ad" $commit)" ||
            error "could not extract author date from '$commit'"
        an="$(git log -1 --date=raw --format="%an" $commit)" ||
            error "could not extract author name from '$commit'"
        ae="$(git log -1 --date=raw --format="%ae" $commit)" ||
            error "could not extract author email from '$commit'"
        cd="$(git log -1 --date=raw --format="%cd" $commit)" ||
            error "could not extract committer date from '$commit'"
        cn="$(git log -1 --date=raw --format="%cn" $commit)" ||
            error "could not extract committer name from '$commit'"
        ce="$(git log -1 --date=raw --format="%ce" $commit)" ||
            error "could not extract committer email from '$commit'"
        GIT_AUTHOR_NAME="$an"  GIT_COMMITTER_NAME="$cn"                 \
        GIT_AUTHOR_DATE="$ad"  GIT_COMMITTER_DATE="$cd"                 \
        GIT_AUTHOR_EMAIL="$ae" GIT_COMMITTER_EMAIL="$ce"                \
        mt_split2mono_translate_commit $override "$commit" "$tree"      \
            "$splitdir" "" "${main_parent_override_dirs[*]}" ||
            continue

        mt_split2mono_translate_pop ||
            error "problem popping the top of the stack"
    done
    return 0
}

