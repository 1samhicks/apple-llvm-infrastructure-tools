#!/bin/bash

. "$(dirname "$0")"/helpers/init.sh
helper mt_llvm_svn
helper mt_llvm_svn2git
helper bisect

usage() { echo "usage: $(print_cmdname) <commit>"; }

[ "$#" -ge 1 ] || error "missing <commit>"
[ "$#" -eq 1 ] || error "too many positional args"

# Make sure this has a rev.
COMMIT=$(run --hide-errors git rev-parse "$1"^{commit}) ||
    error "invalid commit"
REV=$(mt_llvm_svn $COMMIT) ||
    error "no rev for $COMMIT"

# Make sure it's the monorepo.
run git log -1 --format=raw $COMMIT |
run grep -q "^    llvm-svn: $REV\$" ||
    error "$COMMIT is not canonical for $REV"

# Open up a connection to the database.
mt_llvm_svn2git_init || exit 1

# Check if this is mapped.
if mt_llvm_svn2git $REV >/dev/null;  then
    log "$COMMIT is already mapped to r$REV"
    exit 0
fi

# Binary search for the first one not mapped.
# TODO: add a testcase for r1.
# TODO: add a testcase for MT_LLVM_SVN2GIT_SKIP
log "Looking for the first unmapped commit..."
NOT="$(bisect mt_llvm_svn2git_is_commit_mapped $COMMIT^)" || exit 1

# Update all the refs.
log "Mapping commits..."

# TODO: add a testcase for searching exactly one commit.
REVLIST_ARGS=( $COMMIT --not $NOT )
run git rev-list --reverse --format=raw "${REVLIST_ARGS[@]}" |
mt_llvm_svn_impl --append-commit |
mt_llvm_svn2git_insert "${REVLIST_ARGS[@]}"

STATUS=$?
if [ $STATUS -eq 0 -o $STATUS -eq 1 ]; then
    log ""
    log "Saving..."
    mt_llvm_svn2git_save
fi
exit $STATUS
